<% if !@job.persisted? %>
  <div class="row justify-content-center payment-title p-5 mt-4">
    <div class="row">
      <h4 class="subtitle mt-4">Payment</h4>
      <span><i class="fab fa-cc-stripe" style="font-size: 4em;"></i></span>
      <div class="notification is-light has-text-centered">
        All jobs cost <strong>$100</strong> USD for 30 days.
        <span class="block mb-4"></span>
      </div>
    </div>
  </div>


  <div class="form-row p-4 m-4">
    <label for="card-element" class="label">
      <i class="fa fa-credit-card"></i>
      Enter credit or debit card
    </label>

    <div id="card-element" class="form-control">
      <!-- a Stripe Element will be inserted here. -->
    </div>
    <!-- used to display Element errors -->
    <div id="card-errors" role="alert"></div>
  </div>

  <% if current_user.stripe_id.present? %>
    <div class="last-card bg-light p-4 border-radius-3 m-4">
      <h5 class="is-6 title p-2">Previously used card</h5>
      <table class="table is-narrow bg-light is-fullwidth">
        <thead>
        <th>Card Brand</th>
        <th>Last 4 Digits</th>
        <th>Expiration Month</th>
        <th>Expiration Year</th>
        </thead>
        <tr>
          <td><%= current_user.card_brand %></td>
          <td><%= current_user.card_last4 %></td>
          <td><%= current_user.card_expiry_month %></td>
          <td><%= current_user.card_expiry_year %></td>
        </tr>
      </table>
    </div>
  <% end %>
<% end %>

<%= javascript_pack_tag 'stripe', 'data-turbolinks-track': 'reload' %>

<script type="text/javascript" charset="utf-8">
    document.addEventListener("turbolinks:load", function() {
        const public_key = document.querySelector("meta[name='stripe-public-key']").content;
        const stripe = Stripe(public_key);
        const elements = stripe.elements();

        const style = {
            base: {
                color: '#32325d',
                lineHeight: '32px',
                fontFamily: '"Helvetica Neue", Helvetica, sans-serif',
                fontSmoothing: 'antialiased',
                fontSize: '18px',
                '::placeholder': {
                    color: '#aab7c4'
                }
            },
            invalid: {
                color: '#fa755a',
                iconColor: '#fa755a'
            }
        };

        const card = elements.create('card', {style: style});

        if ($('#card-element').length > 0) {
            card.mount('#card-element');
        }

        card.addEventListener('change', ({error}) => {
            const displayError = document.getElementById('card-errors');
            if (error) {
                displayError.textContent = error.message;
            } else {
                displayError.textContent = '';
            }
        });


        if ($('#new_job').length > 0) {
            const form = document.getElementById('new_job');
            form.addEventListener('submit', async (event) => {
                event.preventDefault();

                const {token, error} = await stripe.createToken(card);

                if (error) {
                    // Inform the customer that there was an error.
                    const errorElement = document.getElementById('card-errors');
                    errorElement.textContent = error.message;
                } else {
                    // Send the token to your server.
                    stripeTokenHandler(token);
                }
            });
        }


        const stripeTokenHandler = (token) => {
            // Insert the token ID into the form so it gets submitted to the server
            const form = document.getElementById('new_job');
            const hiddenInput = document.createElement('input');
            hiddenInput.setAttribute('type', 'hidden');
            hiddenInput.setAttribute('name', 'stripeToken');
            hiddenInput.setAttribute('value', token.id);
            form.appendChild(hiddenInput);

            ["brand", "exp_month", "exp_year", "last4"].forEach(function(field) {
                addFieldToForm(form, token, field);
            });

            // Submit the form
            form.submit();
        }

        function addFieldToForm(form, token, field) {
            var hiddenInput = document.createElement('input');
            hiddenInput.setAttribute('type', 'hidden');
            hiddenInput.setAttribute('name', "user[card_" + field + "]");
            hiddenInput.setAttribute('value', token.card[field]);
            form.appendChild(hiddenInput);
        }
    });
</script>